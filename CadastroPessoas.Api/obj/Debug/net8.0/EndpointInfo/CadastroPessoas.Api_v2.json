{
  "openapi": "3.0.1",
  "info": {
    "title": "Pessoas",
    "description": "API para retorno de dados de pessoa.",
    "contact": {
      "name": "Meu email de contato",
      "email": "meu_email@email.com"
    },
    "license": {
      "name": "Meu tipo de licença",
      "url": "https://exemplo.com.licenca"
    },
    "version": "2"
  },
  "paths": {
    "/v2/pessoas": {
      "get": {
        "tags": [
          "Pessoas"
        ],
        "summary": "Obter todos as pessoas",
        "description": "Retorna uma lista com todos as pessoas",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreatedViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Pessoas"
        ],
        "summary": "Criar nova pessoa",
        "description": "Valida e cria nova pessoa no banco de dados.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InseriPessoaInputModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v2/pessoas/{id}": {
      "get": {
        "tags": [
          "Pessoas"
        ],
        "summary": "Obter pessoa por id",
        "description": "Retorna uma pessoa conforme id informado no path",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O identificador único da pessoa.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Pessoas"
        ],
        "summary": "Altera pessoa por id",
        "description": "Altera registro da pessoa no banco de daddos.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O identificador único da pessoa.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlteraPessoaInputModel"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Pessoas"
        ],
        "summary": "Deletar pessoa por id",
        "description": "Remove registro da pessoa do id informado",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O identificador único da pessoa.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v2/usuarios/{id}": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Obter usuario por id",
        "description": "Retorna um usuário conforme id informado no path",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v2/usuarios": {
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Cria um novo usuário",
        "description": "Valida e cria um novo usuário no banco de dados.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InseriUsuarioInputModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUsuarioViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/v2/usuarios/login": {
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Efetua um  login",
        "description": "Retorna o token de autenticação.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUsuarioViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AlteraPessoaInputModel": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da  pessoa",
            "nullable": true,
            "example": "Barbara Finance"
          },
          "idade": {
            "type": "integer",
            "description": "Idade da  pessoa",
            "format": "int32",
            "example": 35
          }
        },
        "additionalProperties": false
      },
      "CreatedUsuarioViewModel": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatedViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "idade": {
            "type": "integer",
            "format": "int32"
          },
          "dataDeCriacao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Tipo de erro que foi gerado",
            "nullable": true,
            "example": "https://datatracker.ietf.org/doc/html/rfc9110#name-400-bad-request"
          },
          "title": {
            "type": "string",
            "description": "Descrição dos erros",
            "nullable": true,
            "example": "Um ou mais erros de validação foram encontrados"
          },
          "status": {
            "type": "integer",
            "description": "Status code http",
            "format": "int32",
            "example": 400
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Dicionário de erros encontrados",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "InseriPessoaInputModel": {
        "required": [
          "idade",
          "nome"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "minLength": 1,
            "type": "string",
            "description": "Nome da  pessoa",
            "example": "Barbara Finance"
          },
          "idade": {
            "type": "integer",
            "description": "Idade da  pessoa",
            "format": "int32",
            "example": 35
          }
        },
        "additionalProperties": false
      },
      "InseriUsuarioInputModel": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginUserInputModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsuarioViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "dataCadastro": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Insira o token no padrão: Bearer {seu token}",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}